<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapper.xml映射文件中定义了操作数据库的sql，每个sql是一个statement，
	 映射文件是mybatis的核心。 -->
<!-- 
	 namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离 
	  注意：使用mapper代理方法开发，namespace有特殊重要的作用，namespace等于mapper接口地址
-->
<mapper namespace="com.luowg.order.mapper.OrderMapper">
	<!-- 表示该mapper开启二级缓存 -->
	<!-- 创建了一个 FIFO 缓存,并每隔 60 秒刷新,存数结果对象或列表的 512 个引用,而且返回的对象被认为是只读的 -->
	<!-- <cache 
		eviction="FIFO"  flushInterval="60000"  size="512"  readOnly="true"/> -->
	
	<!-- 与第三方缓存整合-->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache" > 
        <property name="timeToIdleSeconds" value="3600"/>
        <property name="timeToLiveSeconds" value="3600"/>
       	<!--  同ehcache参数maxElementsInMemory -->
		<property name="maxEntriesLocalHeap" value="1000"/>
		<!-- 同ehcache参数maxElementsOnDisk -->
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache> 
    
	
	 <!-- 添加属性 useCache="false" 能禁用当前检索的查询缓存 -->
	<select id="findOrdersById" parameterType="int" 
			resultType="com.luowg.order.po.Orders">
		select * from orders where id = #{id}
	</select>
	<!-- 保存 -->
	<insert id="save" parameterType="com.luowg.order.po.Orders">
		<!-- 
		将插入数据的主键返回，返回到Orders对象中
		SELECT LAST_INSERT_ID()：得到刚insert进去记录的主键值，只适用与自增主键
		keyProperty：将查询到主键值设置到parameterType指定的对象的哪个属性
		order：SELECT LAST_INSERT_ID()执行顺序，相对于insert语句来说它的执行顺序
		resultType：指定SELECT LAST_INSERT_ID()的结果类型
		 -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into orders(user_id,number,createtime,note) value(#{userId},#{number},#{createtime},#{note})
	</insert>
	<!-- 
		根据id更新
		分析：
		需要传入的id
		需要传入的更新信息
		parameterType指定Orders对象，包括 id和更新信息，注意：id必须存在
		#{id}：从输入 user对象中获取id属性值
	 -->
	 
	 <!-- insert、update、delete 操作后会默认自动刷新缓存   flushCache="false" 表示禁用自动刷新  -->
	<update id="updateOrders" parameterType="com.luowg.order.po.Orders">
		update Orders set user_id=#{userId},number=#{number},createtime=#{createtime,jdbcType=DATE},note=#{note} 
		 where id=#{id}
	</update>
</mapper>


