<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.luowg.*.action">
	</context:component-scan>
	<context:component-scan base-package="com.luowg.*.service">
	</context:component-scan>
	<!-- 
		在springMVC-servlet.xml中配置<mvc:default-servlet-handler />后，
		会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
		它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求
		，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。 
	-->
	 <mvc:default-servlet-handler />
	 <!--该标签对应多个解析类  用来处理注解 -->
	 <mvc:annotation-driven /> 
	
	 <!-- 
	 	 InternalResourceViewResolver用于支持Servlet、JSP视图解析
	 	  当一个请求结束后springMVC会返回一个视图名称(比如一个jsp名字)
	 	  以下配置会把该名称与下面配置中指定的前缀和后缀拼起来作为一个完整路径
	  -->
	 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
            id="internalResourceViewResolver">
        <!-- 表示需要使用jstl -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <!-- 前缀 -->
        <property name="prefix" value="/" />
        <!-- 后缀 -->
        <property name="suffix" value=".jsp" />
    </bean>
    <!-- 文件上传设置 -->
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="102400000"></property>
	</bean>
	
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">      
        <property name="messageConverters">      
            <list >    
            	<!-- 将返回的对象处理为json格式-->  
                <ref bean="mappingJacksonHttpMessageConverter" />  
                <bean id="byteArrayMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>image/jpeg</value>
							<value>image/png</value>
						</list>
					</property>
				</bean>       
            </list>      
        </property> 
    </bean> 
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">    
    <property name="supportedMediaTypes">    
        <list>    
            <value>application/json;charset=UTF-8</value>   
            <value>text/html; charset=UTF-8</value> 
       </list>    
    </property>  
    <!-- 处理json格式  结束-->
</bean>
<import resource="global.xml"/>
</beans>
